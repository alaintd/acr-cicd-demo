name: SampleWebApp CICD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

#env:
#  DOCKER_REGISTRY_URL: eastcanadadevtestacr.azurecr.io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set Environment Variables
        run: |
          cat ./.github/variables/azure-variables.env >> $GITHUB_ENV
        shell: bash

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry server url
          login-server: ${{ env.DOCKER_REGISTRY_URL }}
          # Container registry username
          username: ${{ secrets.ACR_USERNAME }}
          # Container registry password
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push the Docker image
        run: |
          docker build ./SampleWebApplication -t ${{ env.DOCKER_REGISTRY_URL }}/samplewebapp:${{ github.run_id }}
          docker push ${{ env.DOCKER_REGISTRY_URL }}/samplewebapp:${{ github.run_id }}

      - name: Package ARM Template
        uses: actions/upload-artifact@v2
        with: 
          name: arm-templates
          path: ${{ github.workspace }}/SampleWebApplication/azuredeploy.json
          retention-days: 5

  dev:
    needs: build
    uses: ./.github/workflows/reusable-web-app-container-deploy.yml
    with:
      ENVIRONMENT_PREFIX: dev
      SERVER_FARM_RESOURCE_GROUP_NAME: DEV-ACRCD-RG #insert the name of your own RG here
      WEBAPP_LOCATION: canadacentral #insert your desired location here
      WEBAPP_SKU: Basic
      WEBAPP_SKU_CODE: B1
      ENVIRONMENT: development
    secrets: inherit

  prd:
    runs-on: ubuntu-latest

    needs: dev
    environment: production

    env:
      ENVIRONMENT_PREFIX: prd

      SERVER_FARM_RESOURCE_GROUP_NAME: PRD-ACRCD-RG #insert the name of your own RG here
      WEBAPP_LOCATION: canadacentral #insert your desired location here
      WEBAPP_SKU: Basic
      WEBAPP_SKU_CODE: B1

      TAG_ENVIRONMENT: PRODUCTION

    steps:

      - name: Download ARM Templates
        uses: actions/download-artifact@v3
        with:
          name: arm-templates

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.SERVER_FARM_RESOURCE_GROUP_NAME }}
          deploymentMode: Incremental
          template: azuredeploy.json
          parameters: > 
            subscriptionId="${{ secrets.SUBSCRIPTION_ID }}"
            name="${{ env.ENVIRONMENT_PREFIX }}-devops-samplewebapp"
            location="${{ env.WEBAPP_LOCATION }}"
            hostingPlanName="${{ env.ENVIRONMENT_PREFIX }}-asp"
            serverFarmResourceGroup="${{ env.SERVER_FARM_RESOURCE_GROUP_NAME }}"
            sku="${{ env.WEBAPP_SKU }}"
            skuCode="${{ env.WEBAPP_SKU_CODE }}"
            linuxFxVersion="DOCKER|${{ env.DOCKER_REGISTRY_URL }}/samplewebapp:${{ github.run_id }}"
            dockerRegistryUrl="${{ env.DOCKER_REGISTRY_URL }}"
            dockerRegistryUsername="${{ secrets.ACR_USERNAME }}"
            dockerRegistryPassword="${{ secrets.ACR_PASSWORD }}"
            tag_environment="${{ env.TAG_ENVIRONMENT }}"